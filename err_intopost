#include<stdio.h>
#include<ctype.h>
#include<stdlib.h>
#define max 100
/////////////////////////
void push(char *s,char c,int *top)
{
if(*top==max-1)
{
printf("your stack is full\n");
}
else{
(*top)++;
s[*top]= c;
}
}
/////////////////////////
char pop(char *s,int *top)
{
char temp;
if(*top==-1)
{
printf("your stack is empty\n");
}
else{
temp = s[*top];
(*top)--;
return temp;
}
}
/////////////////
int isop(char s)
{
if(s == '*'|| s== '/'|| s=='-'||s=='+')
	return 1;
else return 0;

}
////////////////////

int prec(char s)
{
if(s == '*'|| s== '/')
	return 2;
else if( s=='-'||s=='+')
	return 1;
}
int main()
{
char temp,infix[max],postfix[max],stack[max];
int i=0,j=0,flag,top=-1;
fgets(infix,100,stdin);
while(infix[i] != '\0')
{
if(isdigit(infix[i]))
{
postfix[j]=infix[i];
j++;
}
else if(isop(infix[i])||infix[i]=='(')
{
temp = pop(stack,&top);
while(isop(infix[i]) && prec(temp)>= prec(infix[i]))
{
postfix[j]=temp;
j++;
temp = pop(stack,&top);
}
push(stack,temp,&top);
push(stack,infix[i],&top);
}
else if(infix[i]== ')')
{
temp = pop(stack,&top);
while(temp != '(')
{
postfix[j]=temp;
j++;
temp = pop(stack,&top);
}
}
else{
printf("invalid expression\n");
getchar();
exit(0);
}
}
i=0;
while(postfix[i] != '\0'){
	printf(" %c ",postfix[i]);
	i++;
}
return 0;
}































